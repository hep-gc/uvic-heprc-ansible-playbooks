#!/bin/bash
  PATH='/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin'
  cmd=$(basename $0)
  logfile="/root/ansible_script_logs/$cmd"

  echo $(date) $0 "Starting." > $logfile.partial_log

  echo "Stopping HAProxy." >> $logfile.partial_log
  systemctl stop haproxy >> $logfile.partial_log 2>&1
  haproxy_rc=$?

  echo "Stopping httpd" >> $logfile.partial_log
  systemctl stop httpd >> $logfile.partial_log 2>&1
  httpd_rc=$?

  echo "Checking firewall" >> $logfile.partial_log
  if [ -e /usr/bin/firewall-cmd ]; then
      http_fw=0; https_fw=0; for service in $(firewall-cmd --list-services); do
        if [ "X$service" == 'Xhttp' ]; then
          http_fw=1
        elif [ "X$service" == 'Xhttps' ]; then
          https_fw=1
        fi
      done
  else
      http_fw=1
      https_fw=1
  fi    

  if [ $http_fw -eq 0 ]; then
    echo -n "Opening firewall for HTTP... " >> $logfile.partial_log
    firewall-cmd --add-service http >> $logfile.partial_log
  fi

  if [ $https_fw -eq 0 ]; then
    echo -n "Opening firewall for HTTPS... " >> $logfile.partial_log
    firewall-cmd --add-service https >> $logfile.partial_log
  fi

  if [ -e /etc/letsencrypt/{{ i_service_connection.0.ipv4fqdn }}.tar.gz ] && [ ! -e /etc/letsencrypt/live ]; then
    echo "Install old SSL certificates" >> $logfile.partial_log
    tar -C /etc/letsencrypt -xzf /etc/letsencrypt/{{ i_service_connection.0.ipv4fqdn }}.tar.gz
  fi

  rc=0
  while read virtualhost; do
    if [ "X$1" == 'XTrue' ]; then
      echo "Retrieving SSL certificate for $virtualhost from the test server" >> $logfile.partial_log
      /opt/letsencrypt/bin/certbot certonly --staging -n --agree-tos --email {{ admin_email }} --standalone --break-my-certs -d $virtualhost >> $logfile.partial_log 2>&1 || rc=1
    else
      echo "Retrieving SSL certificate for $virtualhost from the production server" >> $logfile.partial_log
      /opt/letsencrypt/bin/certbot certonly -n --agree-tos --email {{ admin_email }} --standalone -d $virtualhost >> $logfile.partial_log 2>&1 || rc=1
    fi
    if [ -f /etc/letsencrypt/live/$virtualhost/fullchain.pem ]; then
      cd /etc/letsencrypt/live/$virtualhost
      cat fullchain.pem privkey.pem > web_crt_key.pem
    else
      echo "No certificates retrieved for $virtualhost." >> $logfile.partial_log
      rc=1
    fi
  done < <(cat /etc/letsencrypt/VirtualHosts)

  if [ $http_fw -eq 0 ]; then
    echo -n "Closing firewall for HTTP... " >> $logfile.partial_log
    firewall-cmd --remove-service http >> $logfile.partial_log
  fi

  if [ $https_fw -eq 0 ]; then
    echo -n "Closing firewall for HTTPS... " >> $logfile.partial_log
    firewall-cmd --remove-service https >> $logfile.partial_log
  fi

  if [ $httpd_rc -eq 0 ]; then
    echo "Starting httpd" >> $logfile.partial_log
    systemctl start httpd >> $logfile.partial_log 2>&1
  fi

  if [ $haproxy_rc -eq 0 ]; then
    echo "Starting HAProxy." >> $logfile.partial_log
    systemctl start haproxy >> $logfile.partial_log 2>&1
  fi

  echo "Creating SSL certificate backup" >> $logfile.partial_log
  tar -C /etc -czf /var/log/letsencrypt/{{ i_service_connection.0.ipv4fqdn }}.tar.gz letsencrypt

  if [ $rc == 0 ]; then
    mv $logfile.partial_log $logfile.log
  fi
  exit $rc
