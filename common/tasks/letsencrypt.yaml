---
# file: roles/osctl/tasks/letsencrypt.yaml
#
# Note: Set the variable "letsencrypt_test: true" to use the letsencrypt test
# server. This variable is referenced by the handler "run get_letsencrypt_cert".

# Note: This file used to handle backing up letsencrypt
# certificates to a tar.gz in /etc/letsencrypt
# and restoring from this backup if it is present
# through usr_local_sbin_get_letsencrypt_cert.j2
# This is no longer done. A new method for handling
# backups is yet to be decided

- name: stat letsencrypt status
  stat:
    path: /etc/letsencrypt
  register: initial_letsencrypt_status

- name: set timezone
  community.general.timezone:
    name: "{{ timezone }}"
  when: timezone is defined

- name: update the TLS root certificates
  command: update-ca-trust
  when: initial_letsencrypt_status.stat.exists == False

# --- certbot install ---
- name: Install snapd for certbot
  ansible.builtin.dnf:
    name: snapd
    state: present

- name: Enable snapd socket
  ansible.builtin.systemd_service:
    name: snapd.socket
    enabled: true

- name: Enable classic snap
  ansible.builtin.file:
    src: /var/lib/snapd/snap
    dest: /snap
    state: link

- name: Ensure snapd socket started
  ansible.builtin.systemd_service:
    name: snapd.socket
    state: started

- name: Restart snapd service
  ansible.builtin.systemd_service:
    name: snapd.service
    state: restarted

- name: Restart snapd seeded service
  ansible.builtin.systemd_service:
    name: snapd.seeded.service
    state: restarted

- name: Install certbot
  community.general.snap:
    classic: true
    name: certbot
    state: present

- name: Prepare certbot command
  ansible.builtin.file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    state: link
# --- end certbot install ---

- name: Check if renewal-hooks tasks present in role
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/add_letsencrypt_hooks.yaml"
  delegate_to: localhost
  become: false
  register: hooks_present

- name: Add letsencrypt renewal-hooks
  ansible.builtin.include_tasks: add_letsencrypt_hooks.yaml
  when: hooks_present.stat.exists

- name: Register deploy hooks
  ansible.builtin.find:
    paths: /etc/letsencrypt/renewal-hooks/deploy
  # when: hooks_present.stat.exists
  register: deploy_hook_find

- name: Set deploy hook fact
  ansible.builtin.set_fact:
    deploy_hooks: >-
      {%- for item in deploy_hook_find.files %}
      --deploy-hook {{ item.path }}
      {%- endfor -%}
  when: deploy_hook_find is defined and (deploy_hook_find|length>0)

- name: Register if each virtual_host certificate store exists
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ item.virtualhost }}"
  loop: "{{ i_virtualhosts }}"
  register: i_virtualhosts_certificates_store

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Stop HAProxy service if present
  ansible.builtin.systemd_service:
    name: haproxy.service
    state: stopped
  when: "'haproxy.service' in services"

# this step will just create certificates and a systemd timer to renew. You must add renewal hooks to control the behaviour
# of the web server during the renewal
- name: Set up new certificates for virtualhosts (standalone)
  ansible.builtin.command: >-
    certbot -n --standalone
    -d {{ item.item.virtualhost }} --agree-tos
    --email {{ admin_email }}
    {{ deploy_hooks }}
    certonly
  loop: "{{ i_virtualhosts_certificates_store.results }}"
  when: not item.stat.exists and 'httpd.service' not in services
  changed_when: not item.stat.exists

# this step automatically handles apache virtualhosts
- name: Set up new certificates for virtualhosts (apache)
  ansible.builtin.command: >-
    certbot -n --apache -d {{ item.item.virtualhost }} --agree-tos
    --email {{ admin_email }}
    {{ deploy_hooks }}
  loop: "{{ i_virtualhosts_certificates_store.results }}"
  when: not item.stat.exists and 'httpd.service' in services
  changed_when: not item.stat.exists
# test removing -d, certbot should automatically act on all virtualhost folders
# remove certonly, remove --email
# deploy hooks in /etc/letsencrypt/renewal-hooks/deploy do not run on the initial deployment, only renewals

- name: Certbot renew certificates
  ansible.builtin.command: certbot -n renew
  register: out
  changed_when: out is not search("No renewals were attempted")

- name: Show certbot renewal
  ansible.builtin.debug:
    msg: "{{ out.stdout }}"
  when: out is not search("No renewals were attempted")


- name: Start HAProxy service if present
  ansible.builtin.systemd_service:
    name: haproxy.service
    state: started
  when: "'haproxy.service' in services"

- name: create certificates directory
  file:
    dest: /etc/grid-security/certificates
    state: directory
    owner: root
    group: root
    mode: 0755

- name: install letsencrypt certificate chain
  shell: |
    git clone https://github.com/cilogon/letsencrypt-certificates.git
    cd letsencrypt-certificates/
    make check
    sudo make install
  args:
    executable: /bin/bash

- name: meta
  meta: flush_handlers
...
