---
# file: install_configure_mariadb.yaml
#
# Depends on the following variables:
#
#   {{ i_internal_connection.0.ipv4 }}
#   {{ i_internal_connection.0.ipv4fqdn }}
#   {{ database_user_passwords['root'] }}
#   {{ database_user_passwords['change_from_old_root'] }}
#
#  and the following optional variables:
#   {{ public_mariadb }}        - Anything other than "true" is treated as "false". 
#   {{ etc_my_cnf_d }}          - A list of configuration files, see play "configure mariadb server" below.

- name: Open firewall when public mariadb
  ansible.posix.firewalld:
    service: mysql
    state: enabled
    permanent: true
    zone: public
  when:
    - public_mariadb is defined
    - public_mariadb == true
    - (container is undefined) or (container == False)
  ignore_errors: yes
  notify: restart firewalld

# This repository contains mariadb 10.11 
# https://mariadb.org/download/?t=repo-config&d=Red+Hat+Enterprise+Linux+9&v=10.11&r_m=xtom_fre
- name: Add MariaDB repository
  ansible.builtin.copy:
#    src: ../files/etc_yum.repos.d_MariaDB.repo
    src: etc_yum.repos.d_MariaDB.repo
    dest: /etc/yum.repos.d/MariaDB.repo
    remote_src: false
    owner: root
    group: root
    mode: "0644"

- name: Install MariaDB with dnf
  ansible.builtin.dnf:
    name:
      - MariaDB-server < 11
      - MariaDB-client < 11
      - MariaDB-devel < 11
      - MariaDB-common < 11
    state: latest

- name: Restart MariaDB with systemd
  ansible.builtin.systemd:
    service: mariadb
    state: restarted

- name: gather package facts
  ansible.builtin.package_facts:
    manager: rpm

- name: install mariadb (MySQL) packages
  yum:
    name: ['expect',
           'zlib-devel', 'openssl-devel', 'python3-PyMySQL']
    state: latest
  notify:
  - restart mariadb
### removed 'MariaDB-shared','mariadb-client', 'mariadb-server',   included in dnf install

- name: ensure mysql standalone error directories exist
  ansible.builtin.file:
    path: /var/log/mysql
    state: directory
    owner: mysql
    group: root

- name: ensure mariadb is running and enabled with service
  service: name=mariadb state=restarted enabled=yes
  when: (container is undefined) or (container == False)

- name: ensure mariadb is running and enabled with systemd
  systemd: name=mariadb state=started enabled=yes
  when: 
  - container is defined
  - container == True

- name: meta
  meta: flush_handlers

- name: ensure mysql pid is down
  shell: pkill -9 mysql
  ignore_errors: yes
  when:
  - container is defined
  - container == True

- name: restart mariadb
  systemd:
      name: mariadb
      state: restarted
  when:
  - container is defined
  - container == True

- name: secure mariadb database
  script: expect-mariadb_secure_database "{{ database_user_passwords['root'] }}" "{{ database_user_passwords['change_from_old_root'] }}" "{{ ansible_facts['distribution_major_version'] }}" creates=/root/ansible_script_logs/expect-mariadb_secure_database.log

